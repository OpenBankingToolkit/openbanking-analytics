name: Build-UI

on:
  pull_request:
    branches:
      - master
    paths:
      - "forgerock-openbanking-ui/**"
  push:
    branches:
      - master

env:
  GITHUB_SHA: ${{ github.sha }}

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: setup node version 10
        uses: actions/setup-node@v2
        with:
          node-version: '10'
      - name: Run tests
        working-directory: ./forgerock-openbanking-ui
        run: |
          npm ci
          npm run test.ci
          ./node_modules/@angular/cli/bin/ng lint
      - name: Prepare customers
        working-directory: ./forgerock-openbanking-ui
        run: git clone https://${{ secrets.FORGECLOUD_ACCESS_TOKEN }}@github.com/ForgeCloud/ob-customers.git customers
      - name: Archive Production Artifact
        uses: actions/upload-artifact@master
        with:
          name: customers
          path: forgerock-openbanking-ui/customers
  build_analytics_ui:
    name: Build Analytics App
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: prepare version
        id: version
        run: |
          echo "::set-output name=BUILD_VERSION::$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)-${GITHUB_SHA::7}"
      - name: Download Artifact
        uses: actions/download-artifact@master
        with:
          name: customers
          path: forgerock-openbanking-ui/customers
      - working-directory: ./forgerock-openbanking-ui
        run: cp -R ./customers/* themes/
      - name: Build Analytics UI docker image
        working-directory: ./forgerock-openbanking-ui
        run: |
          export REGISTRY=eu.gcr.io/openbanking-214714/obri/analytics-ui
          echo "Building docker image ${REGISTRY}:${{ steps.version.outputs.BUILD_VERSION }}"
          echo "${{ secrets.GCR_JSON_KEY_BASE64 }}" | base64 -d | docker login eu.gcr.io -u _json_key --password-stdin
          docker build --build-arg BUILD_VERSION=${{ steps.version.outputs.BUILD_VERSION }} -f projects/analytics/docker/Dockerfile \
          -t $REGISTRY:latest -t $REGISTRY:${{ steps.version.outputs.BUILD_VERSION }} .
          docker push $REGISTRY:latest
          docker push $REGISTRY:${{ steps.version.outputs.BUILD_VERSION }}
  build_analytics_backend:
    name: Build Analytics Backend
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: prepare version
        id: version
        run: |
          echo "::set-output name=BUILD_VERSION::$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)-${GITHUB_SHA::7}"
      - name: Download Artifact
        uses: actions/download-artifact@master
        with:
          name: customers
          path: forgerock-openbanking-ui/customers
      - working-directory: ./forgerock-openbanking-ui
        run: cp -R ./customers/* themes/
      - name: Build analytics backend docker image
        working-directory: ./forgerock-openbanking-ui
        run: |
          export REGISTRY=eu.gcr.io/openbanking-214714/obri/analytics-node
          echo "Building docker image ${REGISTRY}:${{ steps.version.outputs.BUILD_VERSION }}"
          echo "${{ secrets.GCR_JSON_KEY_BASE64 }}" | base64 -d | docker login eu.gcr.io -u _json_key --password-stdin
          docker build --build-arg BUILD_VERSION=${{ steps.version.outputs.BUILD_VERSION }} -f projects/analytics/docker/Dockerfile-server \
          -t $REGISTRY:latest -t $REGISTRY:${{ steps.version.outputs.BUILD_VERSION }} .
          docker push $REGISTRY:latest
          docker push $REGISTRY:${{ steps.version.outputs.BUILD_VERSION }}
  update_ob_deploy:
    name: Update ob-deploy
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs: [build_analytics_ui, build_analytics_backend]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: prepare version
        id: version
        run: |
          echo "::set-output name=BUILD_VERSION::$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)-${GITHUB_SHA::7}"
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          repository: "forgeCloud/ob-deploy"
          token: ${{ secrets.FORGECLOUD_ACCESS_TOKEN }}
          path: ob-deploy
      - name: Commit ob-deploy version update
        working-directory: ./ob-deploy
        run: |
          jq -M  '[ .[] | if (.service  | contains("analytics-")) then .version |= "${{ steps.version.outputs.BUILD_VERSION }}" else . end ]' client_releases/master-dev/releases.json > client_releases/master-dev/releases.json.tmp
          mv client_releases/master-dev/releases.json.tmp client_releases/master-dev/releases.json
          git config --global user.email "codefresh@codefresh.io"
          git config --global user.name "Codefresh"
          git add client_releases/master-dev/releases.json
          git commit --allow-empty -m "Bumping Analytics UI & Backend version ${{ steps.version.outputs.BUILD_VERSION }}"
      - name: Temporarily disable "include administrators" protection
        id: disable_include_admins
        uses: benjefferies/branch-protection-bot@1.0.7
        if: always()
        with:
          access_token: ${{ secrets.FORGECLOUD_ACCESS_TOKEN }}
          enforce_admins: false
          owner: forgeCloud
          repo: ob-deploy
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.FORGECLOUD_ACCESS_TOKEN }}
          directory: ./ob-deploy
          repository: "forgeCloud/ob-deploy"
          branch: master
      - name: Enable "include administrators" branch protection
        uses: benjefferies/branch-protection-bot@1.0.7
        if: always()
        with:
          access_token: ${{ secrets.FORGECLOUD_ACCESS_TOKEN }}
          enforce_admins: ${{ steps.disable_include_admins.outputs.initial_status }}
          owner: forgeCloud
          repo: ob-deploy
